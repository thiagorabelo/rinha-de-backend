x-rinha-de-backend-default: &rinha-de-backend-default
  image: thiagorts/rinha-de-backend:${APP_TAG}
  build:
    context: ./
    args:
      - PYTHON_TAG=${PYTHON_TAG}
  restart: always
  volumes:
    - ./compose/socks:/tmp/socks:rw
  expose:
    - "8000"
  depends_on:
    - postgres
    - redis
  deploy:
    resources:
      limits:
        cpus: "0.4"
        memory: "0.5GB"


x-app-environment-default: &app-environment-default
  WORKERS: "2"
  # LOG_LEVEL: "debug"

  SECRET_KEY: "j#d)x3j5-yw3&j!7wh@*c&fi1b9-j%t5w$=c=!m^ts_w$)l1l!"

  DEBUG: "0"

  DB_NAME: "rinha_de_backend"
  DB_USER: "galo"
  DB_PASSWORD: "cocorico"
  DB_HOST: "postgres"
  DB_PORT: 5432
  DB_CONN_MAX_AGE: 100

  CACHE_LOCATION: "redis://redis:6379/0"

  CPROFILE_MIDDLEWARE: "0"


services:

  nginx:  # 0.5GB / 0.15
    image: nginx:${NGINX_TAG}
    hostname: nginx
    restart: always
    volumes:
      - ./compose/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./compose/socks:/tmp/socks:rw
    depends_on:
      - app1
      - app2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: "0.15"
          memory: "0.5GB"

  app0:
    <<: *rinha-de-backend-default
    hostname: app0
    restart: "no"
    environment:
      <<: *app-environment-default
      ALLOWED_HOSTS: "app1,app2,localhost,127.0.0.1,0.0.0.0"
    command: sh -c '( sleep 5 && ./manage.py migrate ) && exit 0'
    deploy: {}

  app1:  # 0.5GB / 0.4
    <<: *rinha-de-backend-default
    hostname: app1
    environment:
      <<: *app-environment-default
      ALLOWED_HOSTS: "app1,localhost,127.0.0.1,0.0.0.0"
    depends_on:
      - postgres
      - app0

  app2:  # 0.5GB / 0.4
    <<: *rinha-de-backend-default
    hostname: app2
    environment:
      <<: *app-environment-default
      ALLOWED_HOSTS: "app2,localhost,127.0.0.1,0.0.0.0"
    depends_on:
      - postgres
      - app0

  redis:  # 0.5GB / 0.1
    image: redis:7.2.4-alpine
    hostname: redis
    command: redis-server --save "" --appendonly no --maxclients 20000
    ports:
      - 6379:6379
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: '0.5GB'

  postgres:  # 1.0GB / 0.45
    image: postgres:${PG_TAG}
    hostname: postgres
    restart: always
    volumes:
      - ./compose/db/init:/docker-entrypoint-initdb.d:rw
      - ./compose/db/data:/var/lib/postgresql/data:rw
    env_file:
      - ./compose/db/.env
    command: postgres -c max_connections=400 -c shared_buffers="425MB" -c log_min_messages=error
    expose:
      - "5432"
    ports:
      - "5431:5432"
    deploy:
      resources:
        limits:
          cpus: "0.45"
          memory: "1.0GB"
